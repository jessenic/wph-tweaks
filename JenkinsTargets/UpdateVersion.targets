<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BuildNumFile Condition="$(BuildNumFile) == '' Or $(BuildNumFile) == '*Undefined*'">$(MSBuildProjectDirectory)\..\buildnum.txt</BuildNumFile>
    <BuildDependsOn>
      UpdateManifestVersionTarget;
      $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>

  <Target Name="UpdateManifestVersionTarget" BeforeTargets="BeforeBuild">
    <UpdateManifestVersion ManifestFilename="$(MSBuildProjectDirectory)\Properties\WMAppManifest.xml" BuildNumFilename="$(BuildNumFile)" Condition="Exists('$(BuildNumFile)')" />
  </Target>


  <UsingTask TaskName="UpdateManifestVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <ManifestFilename ParameterType="System.String" Required="true" />
      <BuildNumFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
                try {
                    ManifestFilename = Path.GetFullPath(ManifestFilename);
                    BuildNumFilename = Path.GetFullPath(BuildNumFilename);
                    
                    Log.LogMessage("Updating build number in app manifest...");
                    int buildnum = 0;
                    using (var sr = new System.IO.StreamReader(BuildNumFilename)){
                      Int32.TryParse(sr.ReadLine().Trim(), out buildnum);
                    }
                    Log.LogMessage("Current build seems to be "+buildnum);
                    var fileContents = System.IO.File.ReadAllText(ManifestFilename);
                    var rgx = new Regex("Version=\"([0-9]+\\.[0-9]+\\.[0-9]+)\\.[0-9]+\"");
                    fileContents = rgx.Replace(fileContents, "Version=\"$1."+buildnum+"\"");

                    System.IO.File.WriteAllText(ManifestFilename, fileContents);
                    return true;
                }
                catch (Exception ex) {
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>